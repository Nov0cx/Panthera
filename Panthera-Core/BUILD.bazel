config_setting(
    name = "release",
    define_values = {
        "build_type": "release",
    }
)

config_setting(
    name = "debug",
    define_values = {
        "build_type": "debug",
    }
)

cc_library(
    name = "Panthera-Core",
    srcs = glob([
        "src/Panthera/*.cpp",
        "src/Panthera/**/*.cpp",
        "src/Panthera/**/**/*.cpp",
        "src/Platform/*.cpp",
        "src/Platform/**/*.cpp",
        "src/Platform/**/**/*.cpp",
        "src/Platform/**/**/**/*.cpp",
        "src/Vendor/stb/*.cpp",

    ]),
    hdrs = glob([
        "src/Panthera/*.hpp",
        "src/Panthera/**/*.hpp",
        "src/Panthera/**/**/*.hpp",
        "src/Platform/*.hpp",
        "src/Platform/**/*.hpp",
        "src/Platform/**/**/*.hpp",
        "src/Platform/**/**/**/*.hpp",
        "src/Vendor/stb/*.h",
        "src/Vendor/nlohmann/*.hpp",
    ]),
    deps = [
      "@com_github_Nov0cx_glad//:glad",
      "@com_github_Nov0cx_glfw//:glfw",
      "@com_github_Nov0cx_glm//:glm",
      "@com_github_Nov0cx_spdlog//:spdlog",
      "//vulkan/rules:vulkan_cc_library",
      "@bazel_tools//tools/cpp/runfiles",
      "@com_github_ocornut_imgui//:imgui",
      "@com_github_skypjack_entt//:entt",
      "@com_github_nlohmann_json//:json",
      #"//extern/optick:Optick",
    ],
    defines = [ "USE_OPTICK=1", "GLM_ENABLE_EXPERIMENTAL" ] + select({
                                           ":debug":
                                               ["PANTHERA_DEBUG"],
                                           ":release":
                                               ["PANTHERA_RELEASE"],
                                           "//conditions:default":
                                               ["PANTHERA_DEFAULT"],
                                       }),
    visibility = ["//visibility:public"],
    strip_include_prefix = "src",
)